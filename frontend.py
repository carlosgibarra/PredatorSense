# -*- coding: utf-8 -*-
import os
import sys

# Form implementation generated from reading ui file 'dialog.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtChart import QChart, QLineSeries, QAreaSeries, QChartView
from PyQt5.QtGui import QPen
from PyQt5.QtCore import Qt

from utils import get_resource_path

logo_path = get_resource_path('PredatorLogo.png').replace('\\', '/')
stylesheet = '''
QWidget #tab, #monitoring_tab {
    /* border-image: url(''' + logo_path + ''') 0 0 0 0 stretch stretch */
    background-image: url(''' + logo_path + ''');
    background-repeat: no-repeat;
    background-position: top center;
    background-color: #252525;
}
QGroupBox {
    color: blue;
    font: bold;
    border: 1px solid silver;
    border-radius: 6px;
    margin-top: 6px;
}

QGroupBox#monitoring_box {
    border: 0px dotted gray;
    margin: 0 0 0 0;
    /* background-color: yellow; */
}

QGroupBox #powerStatusLabel, #batteryStatusLabel, #batteryChargeLimitLabel, 
#predatorModeLabel, #cpuTempLabel, #gpuTempLabel, #sysTempLabel, #cpuFanSpeedLabel, 
#gpuFanSpeedLabel, #voltageLabel, #voltageMinMaxLabel, #voltageAverageLabel {
    color: gray;
}
QGroupBox::title {
    subcontrol-origin: margin;
    subcontrol-position: top center;
    color: white;
}
'''

class CustomChart:
    def __init__(
        self,
        title="Voltage Chart",
        objectName="cusChart",
        sample_count=64,
        area_series_color="#80FF0000",
        line_series_color="#E74C3C",
        axis_x_label="Samples",
        axis_y_label="Voltage",
        axis_x_range=(0, 64),
        axis_y_range=(0.5, 1.2),
        **chart_kwargs,
    ):
        
        self.samples = [0.0] * sample_count
        self.sample_count = sample_count
        self.axis_y_range = axis_y_range

        # Create chart elements
        self.chart = QChart()
        self.chartView = QChartView(self.chart)
        self.upperSeries = QLineSeries()
        self.lowerSeries = QLineSeries()
        self.areaSeries = QAreaSeries(self.upperSeries, self.lowerSeries)
        self.lineSeries = QLineSeries()
        self.lineSeriesShadow = QLineSeries()

        # Add series to chart
        self.chart.addSeries(self.areaSeries)
        self.chart.addSeries(self.lineSeries)
        self.chart.addSeries(self.lineSeriesShadow)

        # Customize chart appearance
        self.chart.setTheme(QChart.ChartThemeDark)
        self.chart.setBackgroundRoundness(0)
        self.chart.legend().hide()
        self.chart.createDefaultAxes()
        self.chart.setMargins(QtCore.QMargins(0, 0, 0, 0))
        self.chart.layout().setContentsMargins(0, 0, 0, 0)
        self.chart.setTitle(title)
        self.chart.setTitleFont(QtGui.QFont("Arial", 8))

        ## Set series pen and brush colors
        # pen = QPen(Qt.white)
        # pen.setWidth(2)
        # self.areaSeries.setPen(pen)
        self.areaSeries.setBrush(QtGui.QColor(area_series_color))
        # self.areaSeries.setBrush(QtGui.QColor(255, 0, 0, 150))

        pen = self.lineSeries.pen()
        pen.setBrush(QtGui.QColor(line_series_color))
        pen.setStyle(Qt.PenStyle.DotLine)
        self.lineSeries.setPen(pen)

        # pen = self.lineSeriesShadow.pen()
        # pen.setBrush(QtGui.QColor(line_series_color))
        # # pen.setStyle(Qt.PenStyle.DotLine)
        # self.lineSeriesShadow.setPen(pen)       
        # self.lineSeriesShadow.setPointLabelsFont(QtGui.QFont("Arial", 6)) 

        # Set axis labels and ranges
        axis_x = self.chart.axes(QtCore.Qt.Horizontal)[0]
        axis_x.setTitleText(axis_x_label)
        axis_x.setRange(*axis_x_range)
        # axis_x.setLabelsVisible(False)
        axis_x.setLabelsFont(QtGui.QFont("Arial", 6))
        axis_x.setTickCount(int(sample_count / 4))

        axis_y = self.chart.axes(QtCore.Qt.Vertical)[0]
        axis_y.setTitleText(axis_y_label)
        axis_y.setRange(*axis_y_range)
        axis_y.setLabelsFont(QtGui.QFont("Arial", 6))
        axis_y.setTickCount(4) # Set how many tick lines you want to see

        # Apply additional chart customizations
        for key, value in chart_kwargs.items():
            setattr(self.chart, key, value)
        
        self.chartView.setObjectName(objectName)
        self.chartView.setRenderHint(QtGui.QPainter.Antialiasing)

        self.lineSeriesShadow.setPointLabelsVisible(True)
        self.lineSeriesShadow.setPointLabelsClipping(False)
        self.lineSeriesShadow.setPointLabelsFormat("@yPoint")       
        # self.lineSeriesShadow.setPointLabelsFormat("%.2f" % 9)
        # self.lineSeriesShadow.setLabelPosition(QPointF(10, 10))
        # self.lineSeriesShadow.setLabelOverlap(False)        

    def update_data(self, sample):
        if len(self.samples) >= self.sample_count-1:
            self.samples.pop(0)
        self.samples.append(sample)
        # print(self.samples)

        self.upperSeries.clear()
        self.lowerSeries.clear()
        for i, value in enumerate(self.samples):
            self.upperSeries.append(i, value)
            self.lowerSeries.append(i, 0)

        ## HACK - to prevent chart redraw from clipping labels.
        #         Add 1 additional sample point to the end of the list whos y axis value 
        #         is greater than the max chart range. This enables the repaint to not 
        #         clip series labels whos y value > y max. The 1.2 part will help prevent labels 
        #         being cut off when graphs reach the max y range.
        self.upperSeries.append(i+1, self.axis_y_range[1]*1.2)
        self.lowerSeries.append(i+1, 0)

        self.lineSeries.clear()
        # self.lineSeries.append(QPointF(0, sample))
        # self.lineSeries.append(QPointF(self.sample_count - 1, sample))
        self.lineSeries.append(0, sample)
        self.lineSeries.append(self.sample_count - 1, sample)       

        self.lineSeriesShadow.clear()
        self.lineSeriesShadow.append(20, sample)


class Ui_PredatorSense(object):

    WIDTH = 480
    HEIGHT = 680

    def setupUI(self, PredatorSense):

        ## Create window
        PredatorSense.setObjectName("PredatorSense")
        PredatorSense.setWindowTitle("Predator Senseâ„¢")
        PredatorSense.setWindowModality(QtCore.Qt.NonModal)
        # PredatorSense.resize(self.WIDTH, self.HEIGHT)
        
        ##-------Fan Control Tab--------##

        # QtGui.QFontDatabase.addApplicationFont("fonts/Squares Regular.otf")
        font = QtGui.QFont()
        # print(font.defaultFamily())
        font.setFamily("TT Squares")
        font.setWeight(QtGui.QFont.Light)

        boldfont = QtGui.QFont()
        boldfont.setFamily("DejaVu Sans")
        boldfont.setWeight(QtGui.QFont.Black)
        # boldfont.setPointSize(12)

        self.fan_control_tab = QtWidgets.QTabWidget(PredatorSense)
        self.fan_control_tab.setGeometry(QtCore.QRect(0, 0, self.WIDTH, self.HEIGHT))
        # sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        # sizePolicy.setHorizontalStretch(0)
        # sizePolicy.setVerticalStretch(0)
        # sizePolicy.setHeightForWidth(self.fan_control_tab.sizePolicy().hasHeightForWidth())
        # self.fan_control_tab.setSizePolicy(sizePolicy)
        self.fan_control_tab.setFont(font)
        self.fan_control_tab.setAccessibleName("Predator Sense")
        self.fan_control_tab.setObjectName("tabWidget")

        self.tab = QtWidgets.QWidget(PredatorSense)
        self.tab.setGeometry(QtCore.QRect(0, 0, self.WIDTH, self.HEIGHT))
        self.tab.setObjectName("tab")

        self.monitoring_tab = QtWidgets.QWidget(PredatorSense)
        # self.monitoring_tab.setGeometry(QtCore.QRect(0, 0, self.WIDTH, 650))
        self.monitoring_tab.setObjectName("monitoring_tab")
        
        # Tab name
        self.fan_control_tab.addTab(self.tab, "Home")
        self.fan_control_tab.addTab(self.monitoring_tab, "Monitoring")
        # self.fan_control_tab.setCurrentIndex(1)
        # self.fan_control_tab.setTabText(self.fan_control_tab.indexOf(self.tab), "PredatorSense")        

        self.tab.setStyleSheet(stylesheet)
        self.monitoring_tab.setStyleSheet(stylesheet)

        ##------------ Label-------------##

        # #PREDATORTITLE
        # self.predatorTitle = QtWidgets.QLabel(self.tab)
        # self.predatorTitle.setObjectName("predatorTitle")
        # self.predatorTitle.setText("PredatorSense")
        # self.predatorTitle.move(150, 5)
        # self.predatorTitle.setFont(QtGui.QFont("TT Squares", 18, QtGui.QFont.Bold))

        ##------------Status-------------##

        self.status_box = QtWidgets.QGroupBox(self.tab)
        self.status_box.setGeometry(QtCore.QRect(20, 40, 340, 100))
        self.status_box.setFont(boldfont)
        self.status_box.setObjectName("status_box")
        
        #POWERSTATUS
        self.powerStatusLabel = QtWidgets.QLabel(self.status_box)
        self.powerStatusLabel.setObjectName("powerStatusLabel")
        self.powerStatusLabel.setText("Power Status  :")
        self.powerStatusLabel.move(10, 15)
        self.powerStatusValue = QtWidgets.QLabel(self.status_box)
        self.powerStatusValue.setObjectName("powerStatusValue")
        self.powerStatusValue.move(125, 15)

        #BATTERYSTATUS
        self.batteryStatusLabel = QtWidgets.QLabel(self.status_box)
        self.batteryStatusLabel.setObjectName("batteryStatusLabel")
        self.batteryStatusLabel.setText("Battery Status:")
        self.batteryStatusLabel.move(10, 35)
        self.batteryStatusValue = QtWidgets.QLabel(self.status_box)
        self.batteryStatusValue.setObjectName("batteryStatusValue")
        self.batteryStatusValue.move(125, 35)        

        # BATTERYCHARGELIMIT
        self.batteryChargeLimitLabel = QtWidgets.QLabel(self.status_box)
        self.batteryChargeLimitLabel.setObjectName("batteryChargeLimitLabel")
        self.batteryChargeLimitLabel.setText("Charge Limit   :")
        self.batteryChargeLimitLabel.move(10, 55)
        self.batteryChargeLimitValue = QtWidgets.QLabel(self.status_box)
        self.batteryChargeLimitValue.setObjectName("batteryChargeLimitValue")
        self.batteryChargeLimitValue.move(125, 55)

        # PREDATORMODE
        self.predatorModeLabel = QtWidgets.QLabel(self.status_box)
        self.predatorModeLabel.setObjectName("predatorModeLabel")
        self.predatorModeLabel.setText("Predator Mode:")
        self.predatorModeLabel.move(10, 75)
        self.predatorModeValue = QtWidgets.QLabel(self.status_box)
        self.predatorModeValue.setObjectName("predatorModeValue")
        self.predatorModeValue.move(125, 75)
        self.predatorModeValue.setText("Extreme")

        self.powerStatusLabel.setFont(boldfont)
        self.batteryStatusLabel.setFont(boldfont)
        self.batteryChargeLimitLabel.setFont(boldfont)
        self.predatorModeLabel.setFont(boldfont)
        
        self.powerStatusValue.setFont(font)
        self.batteryStatusValue.setFont(font)
        self.batteryChargeLimitValue.setFont(font)
        self.predatorModeValue.setFont(font)

        ##---------Predator Mode---------##

        self.predMode = QtWidgets.QGroupBox(self.tab)
        self.predMode.setGeometry(QtCore.QRect(370, 40, 90, 100))
        self.predMode.setFont(boldfont)
        self.predMode.setObjectName("predMode")

        self.quietModeCB = QtWidgets.QRadioButton(self.predMode)
        self.quietModeCB.setFont(font)
        self.quietModeCB.setObjectName("quietModeCB")
        self.quietModeCB.move(10, 15)

        self.defaultModeCB = QtWidgets.QRadioButton(self.predMode)
        self.defaultModeCB.setFont(font)
        self.defaultModeCB.setObjectName("defaultModeCB")
        self.defaultModeCB.move(10, 35)

        self.extremeModeCB = QtWidgets.QRadioButton(self.predMode)
        self.extremeModeCB.setFont(font)
        self.extremeModeCB.setObjectName("extremeModeCB")
        self.extremeModeCB.move(10, 55)

        self.turboModeCB = QtWidgets.QRadioButton(self.predMode)
        self.turboModeCB.setFont(font)
        self.turboModeCB.setObjectName("turboModeCB")
        self.turboModeCB.move(10, 75)

        ##-------------Misc--------------##

        self.KB_box = QtWidgets.QGroupBox(self.tab)
        self.KB_box.setGeometry(QtCore.QRect(320, 145, 140, 80))
        self.KB_box.setFont(boldfont)
        self.KB_box.setObjectName("KB_box")

        self.KBTimerCB = QtWidgets.QCheckBox(self.KB_box)
        self.KBTimerCB.setFont(font)
        self.KBTimerCB.setObjectName("global_KBTimer")
        self.KBTimerCB.move(10, 10)

        self.LCDOverdriveCB = QtWidgets.QCheckBox(self.KB_box)
        self.LCDOverdriveCB.setFont(font)
        self.LCDOverdriveCB.setObjectName("LCDOverdrive")
        self.LCDOverdriveCB.move(10, 25)

        # self.trackpadCB = QtWidgets.QCheckBox(self.KB_box)
        # self.trackpadCB.setFont(font)
        # self.trackpadCB.setObjectName("trackpadCB")
        # self.trackpadCB.move(10, 60)        

        self.usbChargingCB = QtWidgets.QCheckBox(self.KB_box)
        self.usbChargingCB.setFont(font)
        self.usbChargingCB.setObjectName("usbCharging")
        self.usbChargingCB.move(10, 40)

        self.chargeLimit = QtWidgets.QCheckBox(self.KB_box)
        self.chargeLimit.setFont(font)
        self.chargeLimit.setObjectName("ChargeLimit")
        self.chargeLimit.move(10, 55)                      

        ##------------------------------##

        # self.coolboost_checkbox = QtWidgets.QCheckBox(self.tab)
        # self.coolboost_checkbox.setGeometry(QtCore.QRect(30, 20, 381, 61))
        # font.setPointSize(30)
        # font.setBold(True)
        # font.setWeight(75)
        # self.coolboost_checkbox.setFont(font)
        # self.coolboost_checkbox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        # self.coolboost_checkbox.setObjectName("checkBox")

        ##--------Temperatures----------##

        self.temp_box = QtWidgets.QGroupBox(self.tab)
        self.temp_box.setGeometry(QtCore.QRect(20, 145, 140, 80))
        self.temp_box.setFont(boldfont)
        self.temp_box.setObjectName("temp_box")

        self.cpuTempLabel = QtWidgets.QLabel(self.temp_box)
        self.cpuTempLabel.setObjectName("cpuTempLabel")
        self.cpuTempLabel.setText("CPU:")
        self.cpuTempLabel.move(10, 15)
        self.cpuTempValue = QtWidgets.QLabel(self.temp_box)
        self.cpuTempValue.setObjectName("cpuTempValue")
        self.cpuTempValue.setFont(font)
        self.cpuTempValue.move(60, 15)

        self.gpuTempLabel = QtWidgets.QLabel(self.temp_box)
        self.gpuTempLabel.setObjectName("gpuTempLabel")
        self.gpuTempLabel.setText("GPU:")
        self.gpuTempLabel.move(10, 35)
        self.gpuTempValue = QtWidgets.QLabel(self.temp_box)
        self.gpuTempValue.setObjectName("gpuTempValue")
        self.gpuTempValue.move(60, 35)

        self.sysTempLabel = QtWidgets.QLabel(self.temp_box)
        self.sysTempLabel.setObjectName("sysTempLabel")
        self.sysTempLabel.setText("SYS:")
        self.sysTempLabel.move(10, 55)
        self.sysTempValue = QtWidgets.QLabel(self.temp_box)
        self.sysTempValue.setObjectName("sysTempValue")
        self.sysTempValue.move(60, 55)

        self.cpuTempLabel.setFont(boldfont)
        self.gpuTempLabel.setFont(boldfont)
        self.sysTempLabel.setFont(boldfont)

        self.cpuTempValue.setFont(font)
        self.gpuTempValue.setFont(font)
        self.sysTempValue.setFont(font)

        ##-----------Fan RPM------------##

        self.fan_box = QtWidgets.QGroupBox(self.tab)
        self.fan_box.setGeometry(QtCore.QRect(170, 145, 140, 80))
        self.fan_box.setFont(boldfont)
        self.fan_box.setObjectName("fan_box")

        self.cpuFanSpeedLabel = QtWidgets.QLabel(self.fan_box)
        self.cpuFanSpeedLabel.setObjectName("cpuFanSpeedLabel")
        self.cpuFanSpeedLabel.setText("CPU:\t")
        self.cpuFanSpeedLabel.move(10, 15)
        self.cpuFanSpeedValue = QtWidgets.QLabel(self.fan_box)
        self.cpuFanSpeedValue.setObjectName("cpuFanSpeedValue")
        self.cpuFanSpeedValue.move(50, 15)

        self.gpuFanSpeedLabel = QtWidgets.QLabel(self.fan_box)
        self.gpuFanSpeedLabel.setObjectName("gpuFanSpeedLabel")
        self.gpuFanSpeedLabel.setText("GPU:\t")
        self.gpuFanSpeedLabel.move(10, 35)
        self.gpuFanSpeedValue = QtWidgets.QLabel(self.fan_box)
        self.gpuFanSpeedValue.setObjectName("gpuFanSpeedValue")
        self.gpuFanSpeedValue.move(50, 35)

        self.cpuFanSpeedLabel.setFont(boldfont)
        self.gpuFanSpeedLabel.setFont(boldfont)
        
        self.cpuFanSpeedValue.setFont(font)
        self.gpuFanSpeedValue.setFont(font)

        ##----------Undervolt-----------##

        self.undervolt_box = QtWidgets.QGroupBox(self.tab)
        self.undervolt_box.setGeometry(QtCore.QRect(20, 230, 440, 200))
        self.undervolt_box.setFont(boldfont)
        self.undervolt_box.setObjectName("undervolt_box")

        self.undervoltLayout = QtWidgets.QVBoxLayout(self.undervolt_box)
        self.undervoltLayout.setContentsMargins(10, 30, 10, 10)
        self.undervoltLayout.setObjectName("undervoltLayout")

        ## Current voltage
        self.voltageLabel = QtWidgets.QLabel(self.undervolt_box)
        self.voltageLabel.setText("Voltage:")
        self.voltageLabel.setObjectName("voltageLabel") 
        self.voltageLabel.move(10, 10)
        # self.voltageLabel.setGeometry(368, 0, 5, 5)

        self.voltageValue = QtWidgets.QLabel(self.undervolt_box)
        self.voltageValue.setObjectName("voltageValue")
        self.voltageValue.move(75, 10)

        # self.voltageValue.setFixedWidth(30)
        # self.voltageValue.setAlignment(QtCore.Qt.AlignLeft)
        # self.voltageValue.setMargin(10)
        # self.voltageValue.setScaledContents(True)
        # self.voltageValue.adjustSize()

        ## Max / Min
        self.voltageMinMaxLabel = QtWidgets.QLabel(self.undervolt_box)
        self.voltageMinMaxLabel.setText("Min / Max:")
        self.voltageMinMaxLabel.setObjectName("voltageMinMaxLabel")
        self.voltageMinMaxLabel.move(150, 10)

        self.voltageMinMaxValue = QtWidgets.QLabel(self.undervolt_box)
        self.voltageMinMaxValue.setObjectName("voltageMinMaxValue")
        self.voltageMinMaxValue.move(230, 10)

        ## Undervolt readings
        # self.undervoltStatus = QtWidgets.QLabel(self.undervolt_box)
        self.undervoltStatus = QtWidgets.QTextBrowser(self.undervolt_box)
        self.undervoltStatus.setObjectName("undervoltStatus")
        # self.undervoltStatus.setFixedWidth(400)
        # self.undervoltStatus.move(10, 35)

        # scrollArea = QtWidgets.QScrollArea(self.undervolt_box)
        # # scrollArea.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        # scrollArea.setWidgetResizable(True)
        # scrollArea.setFixedWidth(420)
        # scrollArea.setFixedHeight(80)
        # scrollArea.setWidget(self.undervoltStatus)
        # scrollArea.move(10, 35)
        # self.voltageMinMaxValue.adjustSize()

        # self.undervoltHLayout.addStretch()
        # self.undervoltLayout.addSpacing(5)
        self.undervoltLayout.addWidget(self.undervoltStatus)

        self.voltageLabel.setFont(boldfont)
        self.voltageMinMaxLabel.setFont(boldfont)

        self.undervoltStatus.setFont(font)
        self.voltageValue.setFont(font)
        self.voltageMinMaxValue.setFont(font)

        ##------------Global------------##

        self.global_box = QtWidgets.QGroupBox(self.tab)
        self.global_box.setGeometry(QtCore.QRect(200, 505, 80, 80))
        self.global_box.setFont(boldfont)
        self.global_box.setObjectName("global_box")

        self.globallayoutWidget = QtWidgets.QWidget(self.global_box)
        self.globallayoutWidget.setGeometry(QtCore.QRect(10, 20, 100, 50))
        self.globallayoutWidget.setObjectName("globallayoutWidget")
        self.horizontalLayout = QtWidgets.QVBoxLayout(self.globallayoutWidget)
        self.horizontalLayout.setObjectName("horizontalLayout")

        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        
        self.global_auto = QtWidgets.QRadioButton(self.globallayoutWidget)
        self.global_auto.setFont(font)
        self.global_auto.setChecked(True)
        self.global_auto.setObjectName("global_auto")
        self.horizontalLayout.addWidget(self.global_auto)

        self.global_turbo = QtWidgets.QRadioButton(self.globallayoutWidget)
        self.global_turbo.setFont(font)
        self.global_turbo.setObjectName("global_turbo")
        self.horizontalLayout.addWidget(self.global_turbo)

        ##----------CPU Box-------------##

        self.cpu_box = QtWidgets.QGroupBox(self.tab)
        self.cpu_box.setGeometry(QtCore.QRect(20, 440, 150, 190))
        self.cpu_box.setFont(boldfont)
        self.cpu_box.setObjectName("cpu_box")

        self.cpulayoutWidget = QtWidgets.QWidget(self.cpu_box)
        self.cpulayoutWidget.setGeometry(QtCore.QRect(10, 40, 100, 100))
        self.cpulayoutWidget.setObjectName("cpulayoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.cpulayoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.cpu_auto = QtWidgets.QRadioButton(self.cpulayoutWidget)
        self.cpu_auto.setChecked(True)
        self.cpu_auto.setObjectName("cpu_auto")
        self.verticalLayout.addWidget(self.cpu_auto)
        self.cpu_manual = QtWidgets.QRadioButton(self.cpulayoutWidget)
        self.cpu_manual.setObjectName("cpu_manual")
        self.verticalLayout.addWidget(self.cpu_manual)
        self.cpu_turbo = QtWidgets.QRadioButton(self.cpulayoutWidget)
        self.cpu_turbo.setObjectName("cpu_turbo")
        self.verticalLayout.addWidget(self.cpu_turbo)
        self.cpuManualSlider = QtWidgets.QSlider(self.cpu_box)
        self.cpuManualSlider.setEnabled(False)
        self.cpuManualSlider.setGeometry(QtCore.QRect(110, 20, 20, 160))
        # self.cpuManualSlider.setCursor(QtGui.QCursor(QtCore.Qt.CrossCursor))

        self.cpuManualSlider.setTickInterval(1)
        self.cpuManualSlider.setTickPosition(QtWidgets.QSlider.TicksAbove)

        self.cpuManualSlider.setMaximum(10)
        self.cpuManualSlider.setProperty("value", 3)
        self.cpuManualSlider.setValue(3)
        self.cpuManualSlider.setOrientation(QtCore.Qt.Vertical)
        self.cpuManualSlider.setObjectName("cpuManualSlider")

        self.cpu_auto.setFont(font)
        self.cpu_manual.setFont(font)
        self.cpu_turbo.setFont(font)

        ##----------GPU Box-------------##

        self.gpu_box = QtWidgets.QGroupBox(self.tab)
        self.gpu_box.setGeometry(QtCore.QRect(310, 440, 150, 190))
        self.gpu_box.setFont(boldfont)
        self.gpu_box.setObjectName("gpu_box")

        self.gpulayoutWidget = QtWidgets.QWidget(self.gpu_box)
        self.gpulayoutWidget.setGeometry(QtCore.QRect(10, 40, 100, 100))
        self.gpulayoutWidget.setObjectName("gpulayoutWidget")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.gpulayoutWidget)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.gpu_auto = QtWidgets.QRadioButton(self.gpulayoutWidget)
        self.gpu_auto.setChecked(True)
        self.gpu_auto.setObjectName("gpu_auto")
        self.verticalLayout_2.addWidget(self.gpu_auto)
        self.gpu_manual = QtWidgets.QRadioButton(self.gpulayoutWidget)
        self.gpu_manual.setObjectName("gpu_manual")
        self.verticalLayout_2.addWidget(self.gpu_manual)
        self.gpu_turbo = QtWidgets.QRadioButton(self.gpulayoutWidget)
        self.gpu_turbo.setObjectName("gpu_turbo")
        self.verticalLayout_2.addWidget(self.gpu_turbo)
        self.gpuManualSlider = QtWidgets.QSlider(self.gpu_box)
        self.gpuManualSlider.setEnabled(False)
        self.gpuManualSlider.setGeometry(QtCore.QRect(110, 20, 20, 160))
        # self.gpuManualSlider.setCursor(QtGui.QCursor(QtCore.Qt.CrossCursor))

        self.gpuManualSlider.setTickInterval(1)
        self.gpuManualSlider.setTickPosition(QtWidgets.QSlider.TicksAbove)

        self.gpuManualSlider.setMaximum(10)
        self.gpuManualSlider.setProperty("value", 3)
        self.gpuManualSlider.setValue(3)
        # self.gpuManualSlider.setSliderPosition(3)
        self.gpuManualSlider.setOrientation(QtCore.Qt.Vertical)
        self.gpuManualSlider.setObjectName("gpuManualSlider")

        self.gpu_auto.setFont(font)
        self.gpu_manual.setFont(font)
        self.gpu_turbo.setFont(font)        

        ##------------------------------##

        self.exit_button = QtWidgets.QPushButton(self.tab)
        self.exit_button.setGeometry(QtCore.QRect(int(self.WIDTH/2-25), 600, 50, 25))
        self.exit_button.setFont(boldfont)
        self.exit_button.setObjectName("pushButton")
        self.exit_button.setText("Exit")

        self.reset_button = QtWidgets.QPushButton(self.tab)
        self.reset_button.setGeometry(QtCore.QRect(int(self.WIDTH/2-40), 440, 80, 25))
        self.reset_button.setFont(font)
        self.reset_button.setObjectName("restPushButton")
        self.reset_button.setText("Reset")  

        self.undervolt_button = QtWidgets.QPushButton(self.tab)
        self.undervolt_button.setGeometry(QtCore.QRect(int(self.WIDTH/2-40), 465, 80, 25))
        self.undervolt_button.setFont(font)
        self.undervolt_button.setObjectName("undervoltPushButton")
        self.undervolt_button.setText("Undervolt")

        ##--------MONITORING TAB--------##

        self.voltageChart = CustomChart("Voltage", "voltage_box", 64, "#80ff0000", "#E74C3C", "", "", (0, 63), (0.5, 1.2))
        self.cpuChart = CustomChart("CPU Temp", "cpuchart_box", 64, "#800000ff", "#0E86D4", "", "", (0, 63), (0, 110))
        self.gpuChart = CustomChart("GPU Temp", "gpuchart_box", 64, "#8000ff00", "#0E8600", "", "", (0, 63), (0, 110))
        self.sysChart = CustomChart("SYS Temp", "syschart_box", 64, "#8000ffff", "#0Effff", "", "", (0, 63), (0, 110))

        self.cpuFanChart = CustomChart("CPU Fan", "cpufanchart_box", 64, "#800080ff", "#0E80ff", "", "", (0, 63), (0, 5660))
        self.gpuFanChart = CustomChart("GPU Fan", "gpufanchart_box", 64, "#8000ff80", "#0Eff80", "", "", (0, 63), (0, 5660))

        # Set up chart layout
        # self.chart_box = QtWidgets.QGroupBox(self.tab)
        self.chart_box = QtWidgets.QGroupBox(self.monitoring_tab)
        self.chart_box.setGeometry(QtCore.QRect(0, 0, self.WIDTH, self.HEIGHT-30))
        self.chart_box.setObjectName("monitoring_box")

        self.vchart = QtWidgets.QVBoxLayout(self.chart_box)
        # self.vchart.addStretch()
        self.vchart.setSpacing(0)
        self.vchart.setContentsMargins(0, 0, 0, 0)
        self.vchart.addWidget(self.voltageChart.chartView)
        self.vchart.addWidget(self.cpuChart.chartView)
        self.vchart.addWidget(self.gpuChart.chartView)
        self.vchart.addWidget(self.sysChart.chartView)
        self.vchart.addWidget(self.cpuFanChart.chartView)
        self.vchart.addWidget(self.gpuFanChart.chartView)

        # scrollArea = QtWidgets.QScrollArea(self.monitoring_tab)
        # scrollArea.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        # scrollArea.setWidgetResizable(True)
        # scrollArea.setFixedHeight(600)
        # scrollArea.setFixedWidth(400)
        # scrollAreaContent = QtWidgets.QWidget()
        # scrollAreaContentLayout = QtWidgets.QVBoxLayout(scrollAreaContent)
        # scrollArea.setGeometry(0, 0, self.WIDTH, self.HEIGHT)  # Adjusted height for better fit
        # scrollArea.setGeometry(QtCore.QRect(20, 50, 440, 655))
        # scrollArea.setWidget(self.chart_box)        

        # self.voltageChart.chartView.setObjectName("chartView")
        self.chart_box.setLayout(self.vchart)

        ###

        self.global_turbo.clicked['bool'].connect(self.cpu_turbo.setChecked)
        self.global_turbo.clicked['bool'].connect(self.gpu_turbo.setChecked)
        self.global_auto.clicked['bool'].connect(self.cpu_auto.setChecked)
        self.global_auto.clicked['bool'].connect(self.gpu_auto.setChecked)

        self.cpu_manual.toggled['bool'].connect(self.cpuManualSlider.setEnabled)
        self.gpu_manual.toggled['bool'].connect(self.gpuManualSlider.setEnabled)

        # Prevents the user from disabling max cpu or gpu fan mode individually when global turbo mode is enabled
        self.global_turbo.toggled['bool'].connect(self.cpu_auto.setDisabled)
        self.global_turbo.toggled['bool'].connect(self.cpu_manual.setDisabled)
        self.global_turbo.toggled['bool'].connect(self.gpu_auto.setDisabled)
        self.global_turbo.toggled['bool'].connect(self.gpu_manual.setDisabled)

        # A hacky solution: eliminates the need for turbo button to listen to cpu and gpu buttons at the same time
        # self.cpu_turbo.toggled['bool'].connect(self.gpu_turbo.setDisabled)
        # self.gpu_turbo.toggled['bool'].connect(self.cpu_turbo.setDisabled)

        # QtCore.QMetaObject.connectSlotsByName(PredatorSense)

        ## ----------------------------------------------------
        # Set button text and window titles 

        # Window title
        PredatorSense.setWindowTitle("Linux PredatorSense")

        ## CoolBoost checkbox
        # self.coolboost_checkbox.setToolTip(_translate("PredatorSense", "Only Works When In Auto Mode"))
        # self.coolboost_checkbox.setText(_translate("PredatorSense", "CoolBoostâ„¢"))

        # Power Status
        self.powerStatusValue.setText("0")
        self.batteryStatusValue.setText("Battery Not In Use")
        self.batteryChargeLimitValue.setText("Off")
        self.predatorModeValue.setText("Default")

        self.predMode.setTitle("Mode")
        self.quietModeCB.setText("Quiet")
        self.defaultModeCB.setText("Default")
        self.extremeModeCB.setText("Extreme")
        self.turboModeCB.setText("Turbo")    

        # Fan box
        self.fan_box.setTitle("Fan RPM")

        # Temp box
        self.temp_box.setTitle("Temps")

        self.cpuFanSpeedValue.setText("5660" + " RPM")
        self.gpuFanSpeedValue.setText("5660" + " RPM")
        self.cpuTempValue.setText("100" + "Â°")
        self.gpuTempValue.setText("100" + "Â°")
        self.sysTempValue.setText("100" + "Â°")        

        # Misc box
        self.KB_box.setTitle("Misc")
        self.KBTimerCB.setText("KB Timeout")
        self.LCDOverdriveCB.setText("LCD Overdrive")
        # self.trackpadCB.setText("Disable Trackpad")
        self.usbChargingCB.setText("USB Charging")
        self.chargeLimit.setText("Charge Limit")

        # Status box
        self.status_box.setTitle("Status")

        # Undervolt box
        self.undervolt_box.setTitle("Undervolt") 

        self.voltageValue.setText("0.00")
        self.voltageMinMaxValue.setText("0.00")

        # Global box
        self.global_box.setTitle("Global")
        self.global_auto.setText("Auto")
        self.global_turbo.setText("Turbo")

        # CPU box
        self.cpu_box.setTitle("CPU Fan")
        self.cpu_auto.setText("Auto")
        self.cpu_manual.setText("Manual")
        self.cpu_turbo.setText("Max speed")

        # GPU box
        self.gpu_box.setTitle("GPU Fan")
        self.gpu_auto.setText("Auto")
        self.gpu_manual.setText("Manual")
        self.gpu_turbo.setText("Max speed")

    # def updateUI(self, PredatorSense, cpufanspeed, gpufanspeed, cpuTemp, gpuTemp, sysTemp, power, battery, mode, modeCB):
        # return
